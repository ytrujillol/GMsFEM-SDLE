include "ffmatlib.idp"
int inside = 2; 
int outside = 1;
real d=0.1;
func f = (pi^2/2)*cos(x*pi/2)*cos(y*pi/2);
func g=0;       //  boundary condition function

int k = 5;

//Mesh
border b1(t=-1, 1){x=t; y=-1; label=outside;};
border b2(t=-1, 1){x=1; y=t;label=outside;};
border b3(t=1,-1){x=t; y=1;label=outside;};
border b4(t=-1, 1){x=-1; y=t;label=outside;};

mesh Th = buildmesh(b1(k) + b2(k) + b3(k) + b4(-k));
plot(Th, wait=true);
fespace Vh(Th, P1);
Vh u,v;
solve smoothcrack(u, v)
    = int2d(Th)(dx(u)*dx(v) + dy(u)*dy(v))
    - int2d(Th)(f*v)
    + on(outside, u=g);
    plot(u, value=true, fill=true, wait=true);


//Save mesh
savemesh(Th,"capacitor.msh");
//Save finite element space connectivity
ffSaveVh(Th,Vh,"capacitor_vh.txt");
//Save some scalar data
ffSaveData(u,"capacitor_potential.txt");